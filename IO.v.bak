module IO (
	input clk, reset, num, output_flag, input_flag,
	input [0:17] SW,
	output [0:6]HEX0,
	output [0:6]HEX1,
	output [0:6]HEX2,
	output [0:6]HEX3,
	output [0:6]HEX4,
	output [0:6]HEX5,
	output [0:6]HEX6,
	output [0:6]HEX7
);
always @(*) begin
	task set_7seg(HEX, num)begin
		case (num)
        4'b0000: HEX <= 7'b0000001;
        4'b0001: HEX <= 7'b1001111;
        4'b0010: HEX <= 7'b0010010;
        4'b0011: HEX <= 7'b0000110;
        4'b0100: HEX <= 7'b1001100;
        4'b0101: HEX <= 7'b0100100;
        4'b0110: HEX <= 7'b0100000;
        4'b0111: HEX <= 7'b0001111;
        4'b1000: HEX <= 7'b0000000;
        4'b1001: HEX <= 7'b0000100;
        default: HEX <= 7'b1111111;
		endcase
	end
	if (output_flag)begin
		set_7seg(HEX0, num%10);
		set_7seg(HEX1, (num/10)%10);
		set_7seg(HEX2, (num/100)%10);
		set_7seg(HEX3, (num/1000)%10);
		set_7seg(HEX4, (num/10000)%10);
		set_7seg(HEX5, (num/100000)%10);
		set_7seg(HEX6, (num/1000000)%10);
		set_7seg(HEX7, (num/10000000)%10);
	end
	if(input_flag)begin
		set_7seg(HEX0, {SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}%10);
		set_7seg(HEX1, ({SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}/10)%10);
		set_7seg(HEX2, ({SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}/100)%10);
		set_7seg(HEX3, ({SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}/1000)%10);
		set_7seg(HEX4, ({SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}/10000)%10);
		set_7seg(HEX5, ({SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}/100000)%10);
		set_7seg(HEX6, ({SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}/1000000)%10);
		set_7seg(HEX7, ({SW[9],SW[8],SW[7],SW[6],SW[5],SW[4],SW[3],SW[2],SW[1],SW[0]}/10000000)%10);
	end
endmodule
//module BCD(SW, HEX0);
//    input [0:17]SW;
//    output [0:6]HEX0;
//    reg [0:6] segmentos;
//    always@(*)
//    case ({SW[14],SW[15],SW[16],SW[17]})
//        4'b0000: segmentos = 7'b0000001;
//        4'b0001: segmentos = 7'b1001111;
//        4'b0010: segmentos = 7'b0010010;
//        4'b0011: segmentos = 7'b0000110;
//        4'b0100: segmentos = 7'b1001100;
//        4'b0101: segmentos = 7'b0100100;
//        4'b0110: segmentos = 7'b0100000;
//        4'b0111: segmentos = 7'b0001111;
//        4'b1000: segmentos = 7'b0000000;
//        4'b1001: segmentos = 7'b0000100;
//        default: segmentos = 7'b1111111;
//    endcase
//    assign HEX0 = segmentos;
//endmodule